# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM
*.xcarchive

## Playgrounds
timeline.xctimeline
playground.xcworkspace

## Xcode Patch
*.xcodeproj/*
!*.xcodeproj/project.pbxproj
!*.xcodeproj/xcshareddata/
!*.xcodeproj/project.xcworkspace/
*.xcodeproj/project.xcworkspace/*
!*.xcodeproj/project.xcworkspace/contents.xcworkspacedata
!*.xcodeproj/project.xcworkspace/xcshareddata/

## Xcode 8 and later
*.xcuserstate
*.xcscmblueprint

## Build artifacts
ArchiveIntermediates/
IntermediateBuildFilesPath/
SharedPrecompiledHeaders/

## SwiftUI Previews
*.PreviewDevice.json

## iOS Simulator
*.app/
*.app.dSYM/

## Instruments
*.trace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
.swiftpm/
.build/
Package.resolved
.package.resolved

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Swift
# (system and IDE patterns moved to bottom sections)

# Testing
.swiftpm/xcode/xcshareddata/xcbaselines/
.swiftpm/xcode/xcshareddata/xcschemes/
xcbaselines/
*.xcresult

# Documentation
docs/
.jazzy.yaml
.sourcedocs

# SPM (additional patterns)
# Main SPM patterns covered above

# Tuist
Derived/
Dependencies/
*.xcworkspace
*.xcodeproj

# Apple Development Tools
## Xcode Cloud
*.xccov
*.xcresultbundle

## Core Data
*.mom
*.momd
*.omo

## watchOS
*.watchkitapp
*.watchkitextension

## tvOS
*.tvos

## Mac Catalyst
*.maccatalyst

## App Store Connect
*.appstoreconnect

## Provisioning (be careful with these)
*.mobileprovision
*.p12
*.cer
*.certSigningRequest

## TestFlight
TestFlight/

## Archives & Exports
Archives/
ExportOptions.plist
*.xcarchive/

## Simulator Logs
~/Library/Logs/iOS Simulator/
~/Library/Developer/CoreSimulator/

## Xcode Server
*.xcscmblueprint
Bots/

## Interface Builder
*.storyboard~
*.xib~

## Asset Catalogs
*.actool

## Metal Shaders
*.metallib

## Reality Composer
*.reality
*.rcproject

## Create ML
*.mlmodel
*.mlmodelc
*.mlpackage

## AR Quick Look
*.usdz

# Others
.nvim.lua
.vim/
tags
.elixir_ls/
.history/
node_modules/
*.log
*.tmp
*.temp
.env
.env.*

# IDE
.vscode/
.idea/

# System
*.swp
*.lock